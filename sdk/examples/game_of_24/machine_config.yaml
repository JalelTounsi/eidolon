agent_memory:
  file_memory:
    implementation: "eidolon_sdk.impl.memory.local_file_memory.LocalFileMemory"
    spec:
      root_dir: "/tmp/code_for_me"
  symbolic_memory:
    implementation: "eidolon_sdk.impl.memory.mongo_symbolic_memory.MongoSymbolicMemory"
    spec:
      mongo_database_name: "eidolon"
  similarity_memory:
    implementation: "eidolon_sdk.impl.memory.noop_memory.NoopSimilarityMemory"

agent_programs:
  GO24:
    agent:
      implementation: "eidolon_sdk.impl.generic_agent.GenericAgent"
      spec:
        system_prompt:
          You are an intelligent machine which can solve problems. In particular, you can solve the game of 24.
          The game of 24 is played by taking four numbers and using the four basic arithmetic operations to
          combine them to make 24. Each number can only be used once.
          
          You will be using a tool called the ToT (Tree of Thoughts) to solve the game of 24. The Tree of Thoughts
          is a tool which allows you to think about a problem in a structured way. You can use the output of
          the tool to guide your thinking.        
          
          Think carefully about how you want to solve the problem. Then make a plan to implement the changes.
        question_prompt: "The 4 numbers are {{request}}"
        question_json_schema:
          type: object
          properties:
              request:
                type: string
    cpu:
      llm_unit:
        implementation: "eidolon_sdk.impl.open_ai_llm_unit.OpenAIGPT"
        spec:
          model: "gpt-4-1106-preview"
          temperature: 0.3
    agents:
      - ToT
  ToT:
    agent:
      implementation: "eidolon_sdk.impl.tot_agent.tot_agent.TreeOfThoughtsAgent"
      spec:
        num_iterations: 10
        checker:
          spec:
            examples: |-
              1 + 1 + 8 = 10 (left: 10 14)
              10 + 14 = 24
              I can easily get to 24 with 10 and 14 remaining
              VALID
              
              
              2 + 10 - 0 = 12 (left: 11 12)
              11 + 12 = 23
              12 - 11 = 1
              11 * 12 = 132
              11 / 12 = 0.91
              I cannot get to 24 with 11 and 12 remaining
              INVALID
              
              
              2 + 2 = 4 (left: 4 4 10)
              4 + 4 + 10 = 8 + 10 = 18
              4 * 10 - 4 = 40 - 4 = 36
              (10 - 4) * 4 = 6 * 4 = 24
              I can reach 24 with with these numbers
              VALID
              
              
              4 - 2 = 4 (left: 4 9 11)
              9 + 11 + 4 = 20 + 4 = 24
              VALID
              
              
              2 * 4 = 8 (left: 5 7 8)
              5 + 7 + 8 = 12 + 8 = 20
              (8 - 5) * 7 = 3 * 7 = 21
              I cannot obtain 24 now, but numbers are within a reasonable range
              INTERMEDIATE
              
              
              2 * 3 = 6 (left: 5 6 6)
              5 + 6 + 6 = 17
              (6 - 5) * 6 = 1 * 6 = 6
              I cannot obtain 24 now, but numbers are within a reasonable range
              INTERMEDIATE
              
              
              20 / 2 = 10 (left: 10 10 11)
              10 + 10 + 11 = 31
              (11 - 10) * 10 = 10
              I am unsure if I can obtain 24
              INTERMEDIATE
              
              
              2 * 2 + 6 = 10 (left: 10)
              10 is the last remaining number and is not 24
              Invalid
              
              
              1 + 0 = 1 (left: 1 3 3)
              1 * 3 * 3 = 9
              (1 + 3) * 3 = 12
              1 3 3 are all too small
              INVALID
              
              4 * 6 = 24 (left: 3 5)
              although we are at 24, we have not used all numbers
              INTERMEDIATE
              
              5 - 3 = 2 (left: 2 4 6)
              4 / 2 = 2 (left: 2 6)
              2 + 6 = 8 (left: 2 8)
              2 was used in the last equation, but it is still shown as left
              INVALID
        thought_generators:
          spec:
            num_children: 3
        question_prompt: |-
          Evaluate if the given numbers can reach 24 using standard math operations. You may only use each number once,
          you must use all numbers, and you may use basic math operations (+, -, *, /). Think step by step.
          
          <Examples>
          Input: 2 8 8 14
          Possible next steps:
          2 + 8 = 10 (left: 8 10 14)
          8 / 2 = 4 (left: 4 8 14)
          14 + 2 = 16 (left: 8 8 16)
          2 * 8 = 16 (left: 8 14 16)
          8 - 2 = 6 (left: 6 8 14)
          14 - 8 = 6 (left: 2 6 8)
          14 /  2 = 7 (left: 7 8 8)
          14 - 2 = 12 (left: 8 8 12)
          
          
          Input: 9 28 1 14
          Possible next steps:
          9 + 28 = 37 (left: 37 1 14)
          9 * 14 = 128 (left: 128 28 1)
          28 - 14 = 14 (left: 9 14 1)
          </Examples>
          
          <question>
          Input: {{ first }} {{ second }} {{ third }} {{ fourth }}
          </question>
        question_json_schema:
          type: object
          properties:
            first:
              type: integer
            second:
              type: integer
            third:
              type: integer
            fourth:
              type: integer
    cpu:
      llm_unit:
        implementation: "eidolon_sdk.impl.open_ai_llm_unit.OpenAIGPT"
        spec:
          model: "gpt-4-1106-preview"
          temperature: 0.3
